<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fastcampus.shop.dao.ProductDao">

<!--    <select id="selectAllProductList" resultType="ProductListDto" parameterType="map">-->
<!--        SELECT product_id, product_name, product_description, product_category, product_price, product_image, product_sales_volume, product_posted_at-->
<!--        FROM product-->
<!--        LIMIT #{offset}, #{pageSize}-->
<!--    </select>-->

    <select id="selectAllProductList" resultType="ProductListDto" parameterType="map">
        SELECT
            p.product_id,
            p.product_name,
            p.product_description,
            p.product_category,
            p.product_price,
            p.product_sales_volume,
            p.product_posted_at,
            pi.image_path
        FROM product p
                 LEFT JOIN product_image2 pi ON p.product_id = pi.product_id AND pi.use_yn = 1
            LIMIT #{offset}, #{pageSize}
    </select>


    <select id="selectFilteredSortedPage" resultType="ProductListDto" parameterType="map">
        SELECT
        p.product_id,
        p.product_name,
        p.product_description,
        p.product_category,
        p.product_price,
        p.product_sales_volume,
        p.product_posted_at,
        pi.image_path
        FROM product p
        LEFT JOIN product_image2 pi
        ON p.product_id = pi.product_id AND pi.use_yn = 1
        <where>
            <if test="productCategory != null and productCategory != ''">
                p.product_category = #{productCategory}
            </if>
        </where>
        <choose>
            <when test="orderColumn != null and orderDir != null">
                ORDER BY
                <choose>
                    <when test="orderColumn == 'product_posted_at'"> p.product_posted_at </when>
                    <when test="orderColumn == 'product_name'"> p.product_name </when>
                    <when test="orderColumn == 'product_price'"> p.product_price </when>
                    <when test="orderColumn == 'product_sales_volume'"> p.product_sales_volume </when>
                </choose>
                <choose>
                    <when test="orderDir == 'ASC'"> ASC </when>
                    <when test="orderDir == 'DESC'"> DESC </when>
                </choose>
            </when>
        </choose>
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="count" resultType="int">
        SELECT COUNT(*) FROM product
    </select>

    <select id="filteredCount" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM product
        <where>
            <if test="productCategory != null and productCategory != ''">
                product_category = #{productCategory}
            </if>
        </where>
    </select>


    <select id="selectProductById" resultType="ProductListDto" parameterType="int">
        SELECT product_id, product_name, product_description, product_category,
               product_price, product_image, product_sales_volume, product_posted_at
        FROM product
        WHERE product_id = #{productId}
    </select>


    <!-- 이미지 -->
    <select id="selectThumbnailImage" resultType="com.fastcampus.shop.dto.ProductListImageDto">
        SELECT image_id, product_id, filename, content_type, image_data, is_thumbnail
        FROM product_image
        WHERE product_id = #{productId}
          AND is_thumbnail = 1
            LIMIT 1
    </select>


    <!-- 상품 상세 -->

    <select id="detailPage" parameterType="String" resultType="com.fastcampus.shop.dto.ProductDetailDto">
        SELECT
            PD.product_detail_id       AS productDetailId,
            P.product_id               AS productId,
            PD.product_detail_price    AS productDetailPrice,
            PD.product_detail_quantity AS productDetailQuantity,
            PD.product_detail_description AS productDetailDescription,
            PD.product_caution_level   AS productCautionLevel,
            P.product_name             AS productName,
            P.product_price            AS productPrice
            FROM loginout.product_detail PD
                     INNER JOIN loginout.product P ON PD.product_id = P.product_id
            WHERE PD.product_id = #{productId}
        </select>

</mapper>
